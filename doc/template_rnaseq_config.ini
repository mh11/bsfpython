#
# BSF Python configuration template for the bsf.analyses.rna_seq.Tuxedo class.
#
# Configuration sections correspond to Python package names.
#
#
# Copyright 2013 - 2018 Michael K. Schuster
#
# Biomedical Sequencing Facility (BSF), part of the genomics core facility
# of the Research Center for Molecular Medicine (CeMM) of the
# Austrian Academy of Sciences and the Medical University of Vienna (MUW).
#
#
# This file is part of BSF Python.
#
# BSF Python is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BSF Python is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BSF Python.  If not, see <http://www.gnu.org/licenses/>.


[bsf.analyses.rna_seq.Tuxedo]

# (Meaningful) Project Name (mandatory)
#
# The project name also defines the project directory name under the
# standard path obtained from bsf.standards.FilePath.get_projects(absolute=True).

project_name =

# Analysis Input and Output Directories (optional)
#
# Analysis input and output directories can override standard paths
# from bsf.Configuration. Both, user and variable expansion gets
# applied. If, at that point, the path is still relative, default
# directory paths from bsf.standards.FilePath get prepended. These
# options can therefore remain empty in typical cases and the output
# directory will be created in the standard location from the project
# name.
#
# input_directory =
# output_directory =

# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# Defaults to 0.
#
# debug = 0

# Genome Assembly Version (mandatory)
#
# The genome assembly version corresponds to a resource directory
# holding the genome sequence and Bowtie 2 indices.
# It is also the name of a new sub-directory under the analysis
# output directory and links to UCSC Genome Browser Track Hubs.

genome_version =

# Operator e-Mail Address (mandatory)
#
# An operator e-mail address is required for UCSC Genome Browser Track Hubs

e_mail =

# Sample Annotation Sheet (optional)
#
# The Sample Annotation Sheet (SAS) specifies a hierarchy of BSF
# ProcessedRunFolder, BSF Project, BSF Sample, BSF PairedReads and BSF
# Reads objects. Additionally, the file type (i.e. 'CASAVA' or
# 'External') can be specified for automatic discovery of objects in
# CASAVA-processed run folders.
#
# Defaults to file name "{project_name}_{rnaseq}_samples.csv"
# in the current working directory.
#
# sas_file =

# Sample Annotation Prefix (optional)
#
# An optional sample annotation sheet prefix gets prepended to column
# names. It is useful to distinguish e.g. 'Control Sample' objects
# from 'Treatment Sample' objects defined on the same sample
# annotation sheet.
#
# sas_prefix =

# Sample Comparison File (optional)
#
# The comparison file specifies, which samples or groups should be
# compared in the differential expression analysis.
# In case a comparison file has not been specified, only the TopHat
# and Cufflinks stage will be run providing spliced alignments,
# alignment coverage and basic expression information.
#
# A special file name *groups* or *samples* constructs the comparison sheet from
# the list of sample groups or sample names in an all-against-all time series, respectively.

cmp_file =

# TODO: The insert_size, insert_std_dev, read_length and paired_end
# options are properties of the Project or Sample objects really. The
# insert_size option specifies the DNA fragment size-selection, the
# insert_std_dev option specifies the corresponding standard
# deviation.

insert_size = 290
insert_std_dev = 20
# The sequencing read length
# TODO: Could be automatically determined from CASAVA output.
read_length = 50

# Reference Genome FASTA (optional)
#
# A FASTA file with the reference genome and corresponding Bowtie indices.
#
# Defaults to the genome_version directory in the default genome directory.
#
# genome_fasta =

# Reference Transcriptome Version (mandatory)
#
# The reference transcriptome version corresponds to a resource directory
# holding the transcriptome annotation and TopHat index files.

transcriptome_version =

# Reference Transcriptome (optional)
#
# A GTF file defines the reference transcriptome. If the path is not absolute,
# standard directory paths from bsf.Configuration get prepended.
#
# Defaults to a transcriptome_version.gtf file.
#
# transcriptome_gtf =

# Mask Transcriptome (optional)
#
# A GTF file path that defines transcripts to be masked in the Cuffquant and CUffdiff analyses.
#
# mask_gtf =

# Multi Read Correction (optional)
#
# Multi-read correction in Cuffquant and Cuffdiff stages.
# Defaults to true so that multi-reads are corrected for.
#
# multi_read_correction =

# Library type (optional)
#
# Cuffquant and Cuffdiff RNA-seq library type "fr-unstranded" (default), "fr-firststrand" or "fr-secondstrand"
# Defaults to fr-unstranded
#
# library_type =

# No length correction (optional)
#
# Do not correct for transcript lengths in Cufflinks, Cuffquant and Cuffdiff analyses of
# e.g. 3-prime sequencing protocols.
#
# Defaults to false so that length corrrection is applied.
#
no_length_correction = false

# Novel Transcript Assembly (optional)
#
# Cufflinks can use the reference transcriptome as the basis for transcript
# assembly and optionally also assemble new transcripts.
#
# Defaults to false so that novel transcripts are *not* assembled.
#
novel_transcripts = true

# Replicate Grouping (optional)
#
# Align ReadGroup objects of a Sample object in groups:
# * true (i.e. all ReadGroup objects of a Sample as a single TopHat process) or
# * false (i.e. each ReadGroup as a separate TopHat process)

replicate_grouping = true

# A [bsf.Stage] section is usually read from the central configuration file.
# Please see the doc/template_bsfpython.ini file for a descripton of
# configuration options that can occur in Analysis-specific configuration
# sections below.

[bsf.analyses.rna_seq.Tuxedo.Stage]
memory_hard = 2048
memory_soft = 2048

[bsf.analyses.rna_seq.Tuxedo.Stage.tophat]
memory_hard = 8192
memory_soft = 8192
# memory_free_virtual = 8G
# Because of limitation in TopHat, the number of threads can only be increased,
# if enough reads are available. Currently, the software does not cope well with
# threads ending up without reads.
threads = 1

[bsf.analyses.rna_seq.Tuxedo.Stage.process_tophat]
memory_hard = 8192
memory_soft = 8192

[bsf.analyses.rna_seq.Tuxedo.Stage.cufflinks]
memory_hard = 8192
memory_soft = 8192
threads = 4

[bsf.analyses.rna_seq.Tuxedo.Stage.process_cufflinks]
memory_hard = 4096
memory_soft = 4096

[bsf.analyses.rna_seq.Tuxedo.Stage.cuffmerge]
memory_hard = 6144
memory_soft = 6144
threads = 4

[bsf.analyses.rna_seq.Tuxedo.Stage.cuffdiff]
memory_hard = 16384
memory_soft = 16384
threads = 8

[bsf.analyses.rna_seq.Tuxedo.Stage.process_cuffdiff]
memory_hard = 6144
memory_soft = 6144

[bsf.executables.TopHat]

# All options in this section directly correspond to
# TopHat command line options.
# See http://tophat.cbcb.umd.edu/manual.html for reference.
#
# The mate-inner-dist = 250 option is calculated from bsf.analyses.Tuxedo
# options read_length and insert_size above.

# Default for b2-L is 20

--b2-L = 15

# Default for max-multihits is 20. Why has this been increased by Doris Chen?

--max-multihits=100

[bsf.process.Executable.bsf_rnaseq_process_tophat2.sh]

[bsf.process.Executable.bsf_rnaseq_process_cufflinks.R]

# For the moment, the genome-specific data set needs specifying.

# --data_set = hsapiens_gene_ensembl
# --data_set = mmusculus_gene_ensembl
# --data_set =

[bsf.process.Executable.bsf_rnaseq_process_cuffdiff.R]
