#
# Configuration file for the Python bsf.analyses.chip_seq.ChIPSeq class.
#
# Configuration sections correspond to Python package names.
#


[bsf.analyses.chip_seq.ChIPSeq]

# (Meaningful) Project Name (mandatory)
#
# The project name also defines the project directory name under the
# standard path obtained from bsf.Default.absolute_projects.

project_name =


# Analysis Input and Output Directories (optional)
#
# Analysis input and output directories can override standard paths
# from bsf.Configuration. Both, user and variable expansion gets
# applied. If, at that point, the path is still relative, default
# directory paths from bsf.Default get prepended. These
# options can therefore remain empty in typical cases and the output
# directory will be created in the standard location from the project
# name.
#
# input_directory =
# output_directory =


# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# Defaults to 0.
#
# debug = 0


# Genome Assembly Version (mandatory)
#
# The genome assembly version corresponds to a resource directory
# holding the genome sequence and BWA indices, as well as
# reference transcript annotation files. It is also the name of a new
# sub-directory under the analysis output directory and links to UCSC
# Genome Browser Track Hubs.

genome_version =


# Operator e-Mail Address (mandatory)
#
# An operator e-mail address is required for UCSC Genome Browser Track Hubs

e_mail =


# Sample Annotation Sheet (mandatory)
#
# The Sample Annotation Sheet (SAS) specifies a hierarchy of BSF
# ProcessedRunFolder, BSF Project, BSF Sample, BSF PairedReads and BSF
# Reads objects. Additionally, the file type (i.e. 'CASAVA' or
# 'External') can be specified for automatic discovery of objects in
# CASAVA-processed run folders.

sas_file =


# Sample Annotation Prefix (optional)
#
# An optional sample annotation sheet prefix gets prepended to column
# names. It is useful to distinguish e.g. 'Control Sample' objects
# from 'Treatment Sample' objects defined on the same sample
# annotation sheet.
#
# sas_prefix =


# Sample Comparison File (mandatory)
#
# The comparison file specifies, which samples or groups should be
# compared.

cmp_file =


# Align BSF Sample replicates in groups:
#   true (i.e. all replicates as a single TopHat process) or
#   false (i.e. each BSF Sample replicate as a separate TopHat process)

replicate_grouping = true


# The genome_sizes are required for the BED to BigBed conversion.
#
# genome_sizes = /fhgfs/groups/lab_bock/mschuster/hg19_chromosome_sizes.txt
# genome_sizes = /fhgfs/groups/lab_bock/mschuster/mm10_chromosome_sizes.txt
genome_sizes = /fhgfs/groups//lab_bock/mschuster/hg19_chromosome_sizes.txt


[bsf.DRMS]

# The General Distributed Resource Management System (DRMS)
# configuration section applies to all analyses in this configuration
# file. Specific sections, configuring specific Analysis objects,
# as well as DRMS objects follow below.


# DRMS Implementation (optional)
#
# The specific implementation of the DRMS to submit jobs into.
#
# Valid options are "sge", "slurm" or "bash" and correspond to modules
# bsf.drms.bash, bsf.drms.sge and bsf.drms.slurm,
# respectively.
#
# Defaults to the value set in bsf.Default.drms_implementation.
#
# implementation =


# Memory Limits per Process (optional)
#
# Generally, the minimum free memory requirements have to be met,
# before a process is started by the DRMS.
#
# Defaults to the value set in ...
#  ... bsf.Default.drms_memory_free_mem
#  ... bsf.Default.drms_memory_free_swap
#  ... bsf.Default.drms_memory_free_virtual,
#  respectively.
#
# memory_free_mem =
# memory_free_swap =
# memory_free_virtual =
#
# The soft and hard memory limits warn and subsequently kill a process,
# respectively.
#
# Defaults to the value set in ...
#  ... bsf.Default.drms_memory_limit_hard
#  ... bsf.Default.drms_memory_limit_soft,
#  respectively.

memory_hard = 2G
memory_soft = 2G


# Time Limit per Process (optional)
#
# The run (wall) time limit of a process.
#
# Defaults to the value set in bsf.Default.drms_time_limit.
#
# time_limit =


# DRMS Queue (optional)
#
# The SGE queue or SLURM partition to submit jobs into.
#
# Defaults to the value set in bsf.Default.drms_queue.
#
# queue =


# DRMS Parallel Environment (optional)
#
# The parallel environment defines how multi-threaded processes are run.
# Values are depending on the DRMS implementation.
#
# Defaults to the value set in bsf.Default.drms_parallel_environment.
#
# parallel_environment =


# DRMS Threads (optional)
#
# The number of threads defines how many parallel processes can run
# in each parallel environment.
#
# Defaults to 1.
#
# threads = 1


[bsf.analyses.chip_seq.ChIPSeq.DRMS]

memory_hard = 2G
memory_soft = 2G

[bsf.analyses.chip_seq.ChIPSeq.DRMS.bowtie2]

memory_hard = 12G
memory_soft = 12G

[bsf.analyses.chip_seq.ChIPSeq.DRMS.sam2bam]

memory_hard = 6G
memory_soft = 6G

[bsf.analyses.chip_seq.ChIPSeq.DRMS.macs14]

memory_hard = 6G
memory_soft = 6G

[bsf.analyses.chip_seq.ChIPSeq.DRMS.process_macs14]

memory_hard = 6G
memory_soft = 6G

[bsf.analyses.chip_seq.ChIPSeq.DRMS.macs2_bdgcmp]

memory_hard = 8G
memory_soft = 8G

[bsf.analyses.chip_seq.ChIPSeq.DRMS.macs2_callpeak]

# MACS2 is significantly memory hungrier than version 1.4.
memory_hard = 56G
memory_soft = 56G
# MACS2 does not really use threads. They are merely used to block memory.
threads = 8

[bsf.analyses.chip_seq.ChIPSeq.DRMS.process_macs2]

memory_hard = 12G
memory_soft = 12G

[bsf.analyses.chip_seq.ChIPSeq.DRMS.diffbind]

memory_hard = 56G
memory_soft = 56G
# bsf_chipseq_diffbind.R does not really use threads. They are merely used to block memory.
threads = 8

[bsf.executables.Bowtie2]

# All options in this section directly correspond to
# Bowtie2 command line options.
# See http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml

[bsf.process.Executable.bsf_sam2bam.sh]

[bsf.executables.Macs14]

# All options in this section directly correspond to Model-based
# Analysis for ChIP-Seq (MACS) version 1.4 command line options.
# See http://liulab.dfci.harvard.edu/MACS/

--gsize = hs

[bsf.process.Executable.bsf_chipseq_process_MACS14.sh]

[bsf.executables.Macs2Callpeak]

# All options in this section directly correspond to Model-based
# Analysis for ChIP-Seq (MACS) version 2 command line options.
# See https://github.com/taoliu/MACS/

--gsize = hs

[bsf.executables.Macs2Bdgcmp]

# All options in this section directly correspond to
# MACS2 command line options.
# See http://liulab.dfci.harvard.edu/MACS/

# The default method ppois Poisson Pvalue (-log10(pvalue) form) should yield
# data on a logarithmic scale, which is counter-intuitive.
# Try method FE fold enrichment with a linear scale.

--method = FE

[bsf.process.Executable.bsf_chipseq_process_macs2.sh]

[bsf.process.Executable.bsf_chipseq_diffbind.R]
