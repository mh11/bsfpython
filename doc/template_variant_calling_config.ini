#
# Configuration file for the Python bsf.analyses.variant_calling.VariantCallingGATK class.
#
# Configuration sections correspond to Python package names.
#


[bsf.analyses.variant_calling.VariantCallingGATK]

# (Meaningful) Project Name (mandatory)
#
# The project name also defines the project directory name under the
# standard path obtained from bsf.Default.absolute_projects.

project_name =


# Analysis Input and Output Directories (optional)
#
# Analysis input and output directories can override standard paths
# from bsf.Configuration. Both, user and variable expansion gets
# applied. If, at that point, the path is still relative, default
# directory paths from bsf.Default get prepended. These
# options can therefore remain empty in typical cases and the output
# directory will be created in the standard location from the project
# name.
#
# input_directory =
# output_directory =


# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# Defaults to 0.
#
# debug = 0


# Genome Assembly Version (mandatory)
#
# The genome assembly version corresponds to a resource directory
# holding the genome sequence and BWA indices, as well as
# reference transcript annotation files. It is also the name of a new
# sub-directory under the analysis output directory and links to UCSC
# Genome Browser Track Hubs.

genome_version =


# Operator e-Mail Address (mandatory)
#
# An operator e-mail address is required for UCSC Genome Browser Track Hubs

e_mail =


# Sample Annotation Sheet (mandatory)
#
# The Sample Annotation Sheet (SAS) specifies a hierarchy of BSF
# ProcessedRunFolder, BSF Project, BSF Sample, BSF PairedReads and BSF
# Reads objects. Additionally, the file type (i.e. 'CASAVA' or
# 'External') can be specified for automatic discovery of objects in
# CASAVA-processed run folders.

sas_file =


# Sample Annotation Prefix (optional)
#
# An optional sample annotation sheet prefix gets prepended to column
# names. It is useful to distinguish e.g. 'Control Sample' objects
# from 'Treatment Sample' objects defined on the same sample
# annotation sheet.
#
# sas_prefix =


# Sample Comparison File (mandatory)
#
# The comparison file specifies, which samples or groups should be
# compared.
# Not implemented yet.
#
# cmp_file =


# Replicate Grouping (optional)
#
# Align BSF Sample replicates in groups:
#   true (i.e. all replicates as a single BWA process) or
#   false (i.e. each BSF Sample replicate as a separate BWA process)

replicate_grouping = false


# Genome Sequence File with BWA Index (mandatory)
#
# Genome database fasta file with indices for the Burrows Wheeler Aligner (BWA) and
# sequence dictionaries for Picard. It is convenient to create a sub-directory with
# symbolic links to the GATK bundle files and the BWA indices within the GATK bundle.

bwa_genome_db = indices_for_BWA_0_7/human_g1k_v37_decoy.fasta


# Cohort name (optional)
#
# A cohort name to label files in whole cohort-level processing steps.
# Defaults to 'default'.
#
# cohort_name =


# snpEff genome database version (mandatory)

snpeff_genome_version = GRCh37.75


# GATK Bundle version

gatk_bundle_version = 2.8


# Skip Picard MarkDuplicates (optional)
#
# Some analyses require skipping of the Picard MarkDuplicates step on both, lane and
# sample level.
# Defaults to false so that Picard MarkDuplicates is run.
#
# skip_mark_duplicates = true


# Down-sampling to Fraction of Reads (optional)
#
# Allow the GATK engine down-sampling to a fraction of reads (optional)
# Defaults to empty string implying defaults set for individual GATK analyses.
#
# downsample_to_fraction = 1.0


# Exlude Intervals (optional)
#
# File path to a Picard-style intervals list file ending in .intervals or
# a comma-separated list of intervals to explicitly exclude from GATK analyses.
# For human, exclude the Human herpesvirus 4 complete wild type genome and importantly,
# the hs37d5 decoy sequence.

exclude_intervals = NC_007605, hs37d5


# Include Intervals (optional)
#
# File path to a Picard-style intervals list file ending in .intervals or
# a comma-separated list of intervals to explicitly include in GATK analyses.
#
# include_intervals =


# Known Variant Sites for Realignment (optional)
#
# Comma-separated list of VCF files with known variant sites for the
# GATK RealignerTargetCreator and IndelRealigner steps.
# The GATK best practices documentation suggests using the
# Mills and 1000 Genomes gold standard insertion deletions for human.
# http://www.broadinstitute.org/gatk/guide/best-practices#data-processing-ovw

known_sites_realignment = 1000G_phase1.indels.b37.vcf,
                        Mills_and_1000G_gold_standard.indels.b37.vcf


# Known Variant Sites for Recalibration (optional)
#
# Comma-separated list of VCF files with known variant sites for the
# GATK BaseRecalibrator and PrintReads steps.
# The GATK best practices documentation suggests using the
# current dbSNP version in addition to the
# Mills and 1000 Genomes gold standard insertion deletions for human.

known_sites_recalibration = dbsnp_138.b37.vcf,
                          1000G_phase1.indels.b37.vcf,
                          Mills_and_1000G_gold_standard.indels.b37.vcf


# Known Variant Sites for Discovery (optional)
#
# Single VCF file of known sites for the
# GATK HaplotypeCaller and GenotypeGVCFs steps.

known_sites_discovery = dbsnp_138.b37.vcf


# Accessory GVCF files (optional)
#
# Comma-spearated list of accessory GVCF file paths to facilitate
# Variant Qulaity Score Recalibration (VQSR) on a larger cohort.
# If the path is relative, the default project directory gets prepended.
#
# accessory_cohort_gvcfs =


# Truth Sensitivity Filter Level (optional)
#
# The truth sensitivity level at which to start filtering at the GATK ApplyRecalibration step.

truth_sensitivity_filter_level_snp = 99.9
truth_sensitivity_filter_level_indel = 99.9


# Skip Variant Quality Score Recalibration (VQSR) on SNPs (optional)
#
# Defaults to false so that VQSR on SNPs is performed.
# vqsr_skip_snp =


# What VQSR training sets / arguments should I use for my specific project?
# http://gatkforums.broadinstitute.org/discussion/1259


# VQSR Resources for SNPs (optional)
#
# Comma-separated list of Variant Quality Score Recalibration (VQSR) resources for SNP recalibration.
# Each resource has to correspond to a section named [vqsr_snp_*], below.

vqsr_resources_snp = hapmap, omni, 1000G, dbsnp


# VQSR Annotations for SNPs (optional)
#
# Comma-separated list of Variant Quality Score Recalibration (VQSR) annotations used for SNP recalibration.
# vqsr_annotations_snp = QD, MQ, MQRankSum, ReadPosRankSum, FS, DP, InbreedingCoeff
#
# ### IMPORTANT ###
# Depth of coverage (the DP annotation invoked by Coverage) should not be used when working with
# exome data sets since there is extreme variation in the depth to which targets are captured!
# In whole genome experiments this variation is indicative of error but that is not the case in
# capture experiments.
#
# ### IMPORTANT ###
# The InbreedingCoeff is a population level statistic that requires at least 10 samples in order to be
# computed. For projects with fewer samples please omit this annotation from the command line.

vqsr_annotations_snp = QD, MQ, MQRankSum, ReadPosRankSum, FS, DP, InbreedingCoeff


# Skip Variant Quality Score Recalibration (VQSR) on INDELs (optional)
#
# Defaults to false so that VQSR on INDELs is performed.
# vqsr_skip_indel =


# VQSR Resources for INDELs (optional)
#
# Comma-separated list of Variant Quality Score Recalibration (VQSR) resources for INDEL recalibration.
# Each resource has to correspond to a section named [vqsr_indel_*], below.

vqsr_resources_indel = dbsnp


# VQSR Annotations for INDELs (optional)
#
# Comma-separated list of Variant Quality Score Recalibration (VQSR) annotations used for INDEL recalibration.

vqsr_annotations_indel = QD, DP, FS, ReadPosRankSum, MQRankSum, InbreedingCoeff


# Annotation Resources (optional)
#
# Comma-separated list of Variant Annotator annotation resources. (Optional)
# Each resource has to correspond to a section named [*_resource], below.
#
annotation_resources = db_snp

[vqsr_snp_hapmap]
known = false
training = true
truth = true
prior = 15.0
file_path = hapmap_3.3.b37.vcf

[vqsr_snp_omni]
known = false
training = true
truth = true
prior = 12.0
file_path = 1000G_omni2.5.b37.vcf

[vqsr_snp_1000G]
known = false
training = true
truth = false
prior = 10.0
file_path = 1000G_phase1.snps.high_confidence.b37.vcf

[vqsr_snp_dbsnp]
known = true
training = false
truth = false
prior = 2.0
file_path = dbsnp_138.b37.vcf

[vqsr_indel_mills]
known = true
training = true
truth = true
prior = 12.0
file_path = Mills_and_1000G_gold_standard.indels.b37.vcf

[vqsr_indel_dbsnp]
known = true
training = false
truth = false
prior = 2.0
file_path = dbsnp_138.b37.vcf

[db_snp_resource]
file_path = dbsnp_138.b37.vcf
annotations = CAF, COMMON, CLNDBN, CLNDSDBID, CLNHGVS, G5, MUT, OM, PM, SAO,
            SSR, VC, VLD, dbSNPBuildID

[bsf.DRMS]

# The General Distributed Resource Management System (DRMS)
# configuration section applies to all analyses in this configuration
# file. Specific sections, configuring specific Analysis objects,
# as well as DRMS objects follow below.


# DRMS Implementation (optional)
#
# The specific implementation of the DRMS to submit jobs into.
#
# Valid options are "sge", "slurm" or "bash" and correspond to modules
# bsf.drms.bash, bsf.drms.sge and bsf.drms.slurm,
# respectively.
#
# Defaults to the value set in bsf.Default.drms_implementation.
#
# implementation =


# Memory Limits per Process (optional)
#
# Generally, the minimum free memory requirements have to be met,
# before a process is started by the DRMS.
#
# Defaults to the value set in ...
#  ... bsf.Default.drms_memory_free_mem
#  ... bsf.Default.drms_memory_free_swap
#  ... bsf.Default.drms_memory_free_virtual,
#  respectively.
#
# memory_free_mem =
# memory_free_swap =
# memory_free_virtual =
#
# The soft and hard memory limits warn and subsequently kill a process,
# respectively.
#
# Defaults to the value set in ...
#  ... bsf.Default.drms_memory_limit_hard
#  ... bsf.Default.drms_memory_limit_soft,
#  respectively.

memory_hard = 8192
memory_soft = 8192


# Time Limit per Process (optional)
#
# The run (wall) time limit of a process.
#
# Defaults to the value set in bsf.Default.drms_time_limit.
#
# time_limit =


# DRMS Queue (optional)
#
# The SGE queue or SLURM partition to submit jobs into.
#
# Defaults to the value set in bsf.Default.drms_queue.
#
# queue =


# DRMS Parallel Environment (optional)
#
# The parallel environment defines how multi-threaded processes are run.
# Values are depending on the DRMS implementation.
#
# Defaults to the value set in bsf.Default.drms_parallel_environment.
#
# parallel_environment =


# DRMS Threads (optional)
#
# The number of threads defines how many parallel processes can run
# in each parallel environment.
#
# Defaults to 1.
#
# threads = 1


[bsf.analyses.variant_calling.VariantCallingGATK.DRMS]


[bsf.analyses.variant_calling.VariantCallingGATK.DRMS.variant_calling_align_lane]
memory_hard = 8192
memory_soft = 8192
threads = 4


[bsf.analyses.variant_calling.VariantCallingGATK.DRMS.variant_calling_process_lane]
memory_hard = 8192
memory_soft = 8192


[bsf.analyses.variant_calling.VariantCallingGATK.DRMS.variant_calling_process_sample]
memory_hard = 8192
memory_soft = 8192


[bsf.analyses.variant_calling.VariantCallingGATK.DRMS.variant_calling_process_cohort]
memory_hard = 8192
memory_soft = 8192


[bsf.executables.BWA]


[bsf.Executable.bsf_run_bwa.py]


[bsf.Executable.bsf_run_variant_calling_process_lane.py]


[bsf.Executable.bsf_run_variant_calling_process_sample.py]


[bsf.Executable.bsf_run_variant_calling_process_cohort.py]


[bsf.runnables.variant_calling_process_lane]


[bsf.runnables.variant_calling_process_sample]


[bsf.runnables.variant_calling_process_cohort]
