#
# BSF Python configuration template for the bsf.analyses.illumina_to_bam_tools.IlluminaToBam class.
#
# Configuration sections correspond to Python package names.
#
#
# Copyright 2013 - 2019 Michael K. Schuster
#
# Biomedical Sequencing Facility (BSF), part of the genomics core facility
# of the Research Center for Molecular Medicine (CeMM) of the
# Austrian Academy of Sciences and the Medical University of Vienna (MUW).
#
#
# This file is part of BSF Python.
#
# BSF Python is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# BSF Python is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with BSF Python.  If not, see <http://www.gnu.org/licenses/>.


[bsf.analyses.illumina_to_bam_tools.IlluminaToBam]

# (Meaningful) Project Name (optional)
#
# In the context of Illumina2bam conversion, the project name is set to the
# flow cell identifier, which is a concatenation of the experiment name and
# the flow cell barcode. Both, experiment name and flow cell barcode
# can be read from XML configuration files in the Illumina Run Folder.
# Therefore, only explicitly specify to override.
#
# project_name =

# Analysis Input and Output Directories (optional)
#
# Analysis input and output directories can override standard paths
# from bsf.Configuration. Both, user and variable expansion gets
# applied. If, at that point, the path is still relative, default
# directory paths from bsf.standards.StandardFilePath get prepended. These
# options can therefore remain empty in typical cases and the output
# directory will be created in the standard location from the project
# name.
#
# input_directory =
# output_directory =

# Debug Level (optional)
#
# A level of extra information can be set via an integer,
# the higher, the more verbose.
#
# Defaults to 0.
#
# debug = 0

# Illumina Run Folder File Path (mandatory)
#
# Both, user and variable expansion gets applied. If, at that point,
# the path is still relative, default directory path from
# bsf.standards.StandardFilePath.get_illumina_run(absolute=True) gets prepended.

illumina_run_folder =

# Intensity Directory File Path (optional)
#
# Both, user and variable expansion gets applied. If, at that point,
# the path is still relative, default directory paths from
# bsf.standards.StandardFilePath get prepended.
#
# Defaults to illumina_run_folder/Data/Intensities.
#
# intensity_directory =

# Base Calls Directory File Path (optional)
#
# Both, user and variable expansion gets applied. If, at that point,
# the path is still relative, default directory paths from
# bsf.standards.StandardFilePath get prepended.
#
# Defaults to illumina_run_folder/Data/Intensities/BaseCalls or
# intensity_directory/BaseCalls if provided.
#
# basecalls_directory =

# Illumina Run Folder Experiment Name (optional)
#
# The experiment name is defined at the initialisation of a run on the instrument.
#
# Defaults to the value specified in XML configuration files in the Illumina Run Folder.
# Therefore, only explicitly specify to override.
#
# experiment_name =

# Sequencing Center (optional)
#
# The name of the sequencing center to be set in the SAM read group (@RG) field.
#
# Defaults to the value of bsf.standards.Operator.get_sequencing_centre().
#
# sequencing_centre =

# Sort Output (optional)
#
# Sort the output BAM file and skip the Picard SortSam step.
# Please note that this option depends on a BSF-modified version of Illumina2bam and will require a considerable
# amount of addiotpnal memory. For 150 paired-end about 15 GiB are required.
#
# Defaults to false
#
# sort_output =

# Sequences Directory File Path (optional)
#
# The directory, in which the project-specific sequences directory folder with archive BAM files will be created.
#
# Defaults to the value of bsf.standards.StandardFilePath.get_sequences(absolute=True).
#
# sequences_directory =

# Directory access mode permission bits (optional)
#
# A comma-separated list of directory access mode permisison bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
# mode_directory = S_IRUSR, S_IRGRP, S_IROTH

# File access mode permission bits (optional)
#
# A comma-separated list of file access mode permisison bit names according to the Python stat module.
#
# Defaults to an undefined value which implies no change.
#
# mode_file = S_IRUSR, S_IXUSR, S_IRGRP, S_IXGRP, S_IROTH, S_IXOTH

# Illumina2bam Java Class Path (optional)
#
# The class path to the Java Archive (JAR) files for the Illumina2bam package.
#
# Defaults to the value of bsf.standards.JavaClassPath.get_illumina2bam().
#
# classpath_illumina2bam =

# Picard Java Class Path (optional)
#
# The class path to the Java Archive (JAR) files for the Picard package.
#
# Defaults to the value of bsf.standards.JavaClassPath.get_picard().
#
# classpath_picard =

# Vendor Quality Filter (optional)
#
# Apply vendor quality filtering.
#
# Defaults to the value of bsf.standards.VendorQualityFilter.get_vendor_quality_filter()
#
# vendor_quality_filter =

# Force Processing (optional)
#
# Force processing of an incomplete Illumina Run Folder,
# which lacks (at least) the RTAComplete.txt file.
#
# Defaults to false.
#
# force =

# A [bsf.analysis.Stage] section is usually read from the central configuration file.
# Please see the doc/template_bsfpython.ini file for a descripton of
# configuration options that can occur in Analysis-specific configuration
# sections below.

[bsf.analyses.illumina_to_bam_tools.IlluminaToBam.Stage]

[bsf.analyses.illumina_to_bam_tools.IlluminaToBam.Stage.illumina_to_bam_cell]

[bsf.analyses.illumina_to_bam_tools.IlluminaToBam.Stage.illumina_to_bam_lane]

[bsf.runnables.illumina_to_bam]
